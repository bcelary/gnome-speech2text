[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "speech2text-whispercpp-service"  # Keep in sync with __init__.py:PACKAGE_NAME
version = "0.9"
description = "whisper.cpp-based D-Bus service providing speech-to-text functionality for GNOME Shell"
readme = "README.md"
license = {text = "GPL-2.0-or-later"}
authors = [
    {name = "Bartek Celary", email = "bcelary@gmail.com"}
]
maintainers = [
    {name = "Bartek Celary", email = "bcelary@gmail.com"}
]
keywords = [
    "gnome",
    "speech-to-text",
    "dbus",
    "voice-recognition",
    "accessibility",
    "whisper.cpp",
    "whispercpp"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Desktop Environment :: Gnome",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    # Note: dbus-python and pygobject should be installed via system packages
    # (python3-dbus and python3-gi) as they require system libraries.
    # They are listed here for documentation but excluded in uv.lock
    "requests>=2.25.0",
]

[project.urls]
Homepage = "https://github.com/bcelary/gnome-speech2text"
Repository = "https://github.com/bcelary/gnome-speech2text"
Issues = "https://github.com/bcelary/gnome-speech2text/issues"
Documentation = "https://github.com/bcelary/gnome-speech2text/blob/main/README.md"

[project.scripts]
# Keep in sync with __init__.py constants
speech2text-whispercpp-service = "speech2text_whispercpp_service.cli:main"
speech2text-whispercpp-setup = "speech2text_whispercpp_service.setup:main"
speech2text-whispercpp-uninstall = "speech2text_whispercpp_service.setup:uninstall"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
speech2text_whispercpp_service = ["../data/*"]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "S",    # bandit
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "PT",   # flake8-pytest-style
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "ERA",  # eradicate
]
ignore = [
    "E501",  # line too long (handled by black)
    "S603",  # subprocess without shell=True is okay
    "S607",  # starting process with partial path is okay for system commands
]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true
files = ["src"]

[[tool.mypy.overrides]]
module = "dbus.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gi.*"
ignore_missing_imports = true

# uv-specific dependency groups
[dependency-groups]
dev = [
    "black",
    "ruff",
    "mypy",
    "build",
    "twine",
    "pytest",
]
